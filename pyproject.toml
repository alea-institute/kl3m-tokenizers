[project]
name = "kl3m-tokenizers"
version = "0.1.0"
description = "Tokenizers for the KL3M project from the ALEA Institute"
authors = [{ name = "ALEA Institute", email = "hello@aleainstitute.ai" }]
requires-python = ">=3.10,<4.0.0"
readme = "README.md"
license = "MIT"
keywords = ["alea"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Utilities",
]
dependencies = [
    "tokenizers",
    "transformers>=4.45.2,<5",
    "tiktoken>=0.8.0,<0.9",
    "orjsonl>=1.0.0,<2",
    "httpx>=0.27.2,<0.28",
    "alea-preprocess>=0.1.12,<0.2",
    "datasets>=3.4.1",
    "cheesecloth>=0.2.2",
]

[project.urls]
Homepage = "https://aleainstitute.ai/"
Repository = "https://github.com/alea-institute/kl3m-tokenizers"

[dependency-groups]
dev = [
    "types-lxml>=2024.8.7,<2025",
    "pytest>=8.3.2,<9",
    "pytest-asyncio>=0.23.8,<0.24",
    "pytest-benchmark>=4.0.0,<5",
    "pytest-cov>=5.0.0,<6",
    "pylint>=3.2.7,<4",
]

[tool.uv]

[tool.uv.sources]
tokenizers = { git = "https://github.com/alea-institute/tokenizers.git", branch = "random-chunk-bpe-multi-word", subdirectory = "bindings/python" }

[tool.hatch.build.targets.sdist]
exclude = [
    "tests",
    "docs",
    "examples",
    "docker",
]

[tool.hatch.build.targets.wheel]
exclude = [
    "tests",
    "docs",
    "examples",
    "docker",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pylint]
max-line-length = 120
disable = [
    "line-too-long",
    "too-few-public-methods",
    "no-self-argument",
    "cyclic-import"
]
extension-pkg-allow-list = ["lxml"]
ignore-patterns = ["test_.*?.py", "conftest.py"]

[tool.pylint.messages_control]
max-args = 10
max-attributes = 15
max-branches = 15
max-locals = 25
min-public-methods = 0

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
addopts = "--cov=kl3m_tokenizers --cov-report=term-missing --cov-report=xml --cov-report=html"

[tool.mypy]
ignore_missing_imports = true
